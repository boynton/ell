(define (pi n d)
  (set! n (+ (quotient n d) 1))
  (let ((m (quotient (* n (* d 3322)) 1000)))
     (let ((r (for ((s 1 (* 10 s))
                    (i 0 (+ 1 i)))
                  ((>= i d) s)))
              (a (make-vector (+ 1 m) 2)))
       (vector-set! a m 4)
       (for ((j 1 (+ 1 j))
            (q 0 0)
            (b 2 (remainder q r)))
               ((> j n))
             (for ((k m (- k 1))) ((zero? k))
               (set! q (+ q (* (vector-ref a k) r)))
               (let ((t (+ 1 (* 2 k))))
                     (vector-set! a k (remainder q t))
                         (set! q (* k (quotient q t)))))
                 (let ((s (to-string (+ b (quotient q r)))))
                       (for ((l (string-length s) (+ 1 l)))
                           ((>= l d) (display s))
                         (display #\0)))
                     (display (if (zero? (modulo j 10)) #\newline #\ )))
       (newline))))

;(pi 1000 5)
