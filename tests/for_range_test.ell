(use assert)

(assert-equal '(0 1 2 3 4 5 6 7 8 9) (range 10))
(assert-equal '(1 2 3 4 5 6 7 8 9) (range 1 10))
(assert-equal '(1 3 5 7 9) (range 1 10 2))
(assert-equal '(-4 -3 -2 -1 0 1 2 3 4) (range -4 5))
(assert-equal '(4 3 2 1 0 -1 -2 -3 -4) (range 4 -5 -1))

(let ((x '()))
   (dorange (i 5) (set! x (cons i x)))
   (assert-equal '(4 3 2 1 0) x))

(assert-equal '() (for () '()))
(assert-equal '([1] [2] [3]) (for ((x (range 1 4))) [x]))
(assert-equal '([1 a] [1 b] [1 c] [2 a] [2 b] [2 c] [3 a] [3 b] [3 c]) (for ((x (range 1 4)) (y '(a b c))) [x y]))

(println "[for_range_test OK]")
