(use http-util)

(def library {}) ;;simple in-memory storage

;; Create
(defn post-book-handler (book)
  (let ((id (get book "id")))
    (if (has? library id)
        (http-fail 409 (string "Already exists: " id))
        (do
          (put! library id book)
          (http-created (string "http://localhost:8080/book/" id) book)))))

;; Read
(defn get-book-handler (id)
  (if (has? library id)
      (http-ok (get library id))
      (http-fail 404 (string "Not found: " id))))

;; Update
(defn put-book-handler (id book)
  (if (has? library id)
      (do
        (put! library id book)
        (http-ok book))
      (http-fail 404 (string "Not found: " id))))

;; Delete
(defn delete-book-handler (id)
  (if (has? library id)
      (do (unput! library id) (no-content))
      (http-fail 404 (string "Not found: " id))))

;; List
(defn get-book-list-handler ()
  (http-ok (keys library)))

;; The glue
(http-serve 8080 {
   "GET" (list {path: '("book" id:) handler: get-book-handler}, {path: '("book") handler: get-book-list-handler})
   "POST" (list {path: '("book") handler: post-book-handler})
   "DELETE" (list {path: '("book" id:) handler: delete-book-handler})
   "PUT" (list {path: '("book" id:) handler: put-book-handler})
})


