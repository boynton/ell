(use http-util)

(def library {}) ;;simple in-memory storage

(defn create-book (book)
  (let ((id (get book "id")))
    (if (has? library id)
        (http-fail 409 (string "Already exists: " id))
        (do
          (put! library id book)
          (http-created (string "http://localhost:8080/book/" id) book)))))

(defn read-book (id)
  (if (has? library id)
      (http-ok (get library id))
      (http-fail 404 (string "Not found: " id))))

(defn update-book (id book)
  (if (has? library id)
      (do
        (put! library id book)
        (http-ok book))
      (http-fail 404 (string "Not found: " id))))

(defn delete-book (id)
  (if (has? library id)
      (do (unput! library id) (http-no-content))
      (http-fail 404 (string "Not found: " id))))

(defn list-books ()
  (http-ok (keys library)))

(http-serve 8080
            (handler create-book "POST" "book")
            (handler read-book "GET" "book" id:)
            (handler update-book "PUT" "book" id:)
            (handler delete-book "DELETE" "book" id:)
            (handler list-books "GET" "book"))
